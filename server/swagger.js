```
/**
 * @swagger
 * components:
 *   schemas:
 *     AdminSchema:
 *       type: object
 *       required:
 *         - name
 *         - email
 *         - password
 *       properties:
 *         name:
 *           type: string
 *           description: The name of the admin
 *         email:
 *           type: string
 *           format: email
 *           description: The email address of the admin
 *         password:
 *           type: string
 *           description: The password for the admin
 *     SellerSchema:
 *       type: object
 *       required:
 *         - name
 *         - email
 *         - phone
 *         - password
 *         - address
 *         - pin
 *         - img
 *       properties:
 *         name:
 *           type: string
 *           description: The name of the seller
 *         email:
 *           type: string
 *           format: email
 *           description: The email address of the seller
 *         phone:
 *           type: string
 *           description: The phone number of the seller
 *         password:
 *           type: string
 *           description: The password for the seller
 *         address:
 *           type: string
 *           description: The address of the seller
 *         pin:
 *           type: string
 *           description: The PIN code of the seller's address
 *         status:
 *           type: string
 *           default: Unblocked
 *           description: The status of the seller 
 *         time:
 *           type: string
 *           format: date-time
 *           default: Date.now
 *           description: The time when the seller was registered 
 *         income:
 *           type: number
 *           default: 0
 *           description: The income generated by the seller (
 *         img:
 *           type: string
 *           description: The image URL of the seller
 *     ConsumerSchema:
 *       type: object
 *       required:
 *         - name
 *         - email
 *         - password
 *         - phone
 *         - address
 *         - pin
 *       properties:
 *         name:
 *           type: string
 *           description: The name of the consumer
 *         email:
 *           type: string
 *           format: email
 *           description: The email address of the consumer
 *         password:
 *           type: string
 *           description: The password for the consumer
 *         phone:
 *           type: string
 *           description: The phone number of the consumer
 *         address:
 *           type: string
 *           description: The address of the consumer
 *         pin:
 *           type: string
 *           description: The PIN code of the consumer's address
 *         status:
 *           type: string
 *           default: Unblocked
 *           description: The status of the consumer 
 *         time:
 *           type: string
 *           format: date-time
 *           default: Date.now
 *           description: The time when the consumer was registered 
 *         img:
 *           type: string
 *           description: The image URL of the consumer
 *     HistorySchema:
 *       type: object
 *       required:
 *         - customerid
 *         - sellerid
 *         - serviceid
 *       properties:
 *         customerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the customer
 *         sellerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the seller
 *         serviceid:
 *           type: string
 *           format: uuid
 *           description: The ID of the service
 *         time:
 *           type: string
 *           format: date-time
 *           default: Date.now
 *           description: The time when the history record was created 
 *         status:
 *           type: string
 *           default: pending
 *           description: The status of the history record 
 *         datecompleted:
 *           type: string
 *           format: date-time
 *           default: Date.now
 *           description: The time when the service was completed 
 *     RequestSchema:
 *       type: object
 *       required:
 *         - serviceid
 *         - customerid
 *         - accepted
 *         - sellerid
 *       properties:
 *         serviceid:
 *           type: string
 *           format: uuid
 *           description: The ID of the service requested
 *         customerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the customer requesting the service
 *         accepted:
 *           type: boolean
 *           default: false
 *           description: Indicates whether the request has been accepted by the seller 
 *         sellerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the seller to whom the request is sent
 *     ReviewSchema:
 *       type: object
 *       required:
 *         - rating
 *         - sellerid
 *       properties:
 *         consumername:
 *           type: string
 *           description: The name of the consumer who provided the review
 *         review:
 *           type: string
 *           description: The review content
 *         rating:
 *           type: number
 *           description: The rating given by the consumer
 *         sellerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the seller being reviewed
 *     ServiceSchema:
 *       type: object
 *       required:
 *         - title
 *         - tag
 *         - description
 *         - pointer
 *       properties:
 *         title:
 *           type: string
 *           description: The title of the service
 *         tag:
 *           type: string
 *           description: The tag of the service
 *         charge:
 *           type: number
 *           description: The charge of the service
 *         description:
 *           type: string
 *           description: The description of the service
 *         pointer:
 *           type: string
 *           format: uuid
 *           description: The ID of the seller providing the service
 *     TransactionSchema:
 *       type: object
 *       required:
 *         - serviceid
 *         - customerid
 *         - charge
 *         - sellerid
 *         - transactionid
 *       properties:
 *         serviceid:
 *           type: string
 *           format: uuid
 *           description: The ID of the service involved in the transaction
 *         customerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the customer involved in the transaction
 *         charge:
 *           type: number
 *           description: The charge of the transaction
 *         sellerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the seller involved in the transaction
 *         time:
 *           type: string
 *           format: date-time
 *           default: Date.now
 *           description: The time when the transaction occurred 
 *         transactionid:
 *           type: string
 *           description: The ID of the transaction
 *     ChatSchema:
 *       type: object
 *       required:
 *         - pointer
 *         - message
 *         - sender
 *       properties:
 *         pointer:
 *           type: string
 *           format: uuid
 *           description: The ID of the chat set to which the message belongs
 *         message:
 *           type: string
 *           description: The content of the message
 *         sender:
 *           type: string
 *           description: The sender of the message
 *         time:
 *           type: string
 *           format: date-time
 *           default: Date.now
 *           description: The time when the message was sent 
 *     ChatSetSchema:
 *       type: object
 *       required:
 *         - customerid
 *         - sellerid
 *       properties:
 *         customerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the customer in the chat set
 *         sellerid:
 *           type: string
 *           format: uuid
 *           description: The ID of the seller in the chat set
 *     BlockedSellerSchema:
 *       type: object
 *       required:
 *         - email
 *       properties:
 *         email:
 *           type: string
 *           format: email
 *           description: The email address of the blocked seller
 *     BlockedConsumerSchema:
 *       type: object
 *       required:
 *         - email
 *       properties:
 *         email:
 *           type: string
 *           format: email
 *           description: The email address of the blocked consumer
 */






/** 
 * @swagger
 *   /api/consumer/register:
 *     post:
 *       tags:
 *         - default
 *       summary: consumer_register
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 name: consumer2
 *                 email: consumer2@locally.com
 *                 password: abCD12#$
 *                 phone: '1234567890'
 *                 address: gkp
 *                 pin: 273013
 *       parameters:
 *         - name: name
 *           in: header
 *           schema:
 *             type: string
 *           example: consumer1
 *         - name: email
 *           in: header
 *           schema:
 *             type: string
 *           example: consumer1@locally.com
 *         - name: password
 *           in: header
 *           schema:
 *             type: string
 *           example: abCD12#$
 *         - name: address
 *           in: header
 *           schema:
 *             type: string
 *           example: gkp
 *         - name: pin
 *           in: header
 *           schema:
 *             type: integer
 *           example: '273013'
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/consumer/login:
 *     post:
 *       tags:
 *         - default
 *       summary: consumerlogin
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 email: consumer1@locally.com
 *                 password: abCD12#$
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 * /api/consumer/profile:
 *   get:
 *     tags:
 *       - default
 *     summary: consumerprofile
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkMjQ5YjEwNjlkYjgwYTYwYTZkM2MiLCJpYXQiOjE3MTI1MTU1MzksImV4cCI6MTcxMjYwMTkzOX0.TOIyc_2QeRH50ZoULHM53kLpCZKNPZmTY16EuQ2cso4
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */
/**
 * @swagger
 * /api/consumer/profile/update:
 *   put:
 *     tags:
 *       - default
 *     summary: consumerprofileupdate
 *     requestBody:
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             example:
 *               address: fgdl
 *               pin: '323455'
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkMjQ5YjEwNjlkYjgwYTYwYTZkM2MiLCJpYXQiOjE3MTI1MTU1MzksImV4cCI6MTcxMjYwMTkzOX0.TOIyc_2QeRH50ZoULHM53kLpCZKNPZmTY16EuQ2cso4
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */
/**
 * @swagger
 * /api/consumer/consumer/sellerrating:
 *   post:
 *     tags:
 *       - default
 *     summary: givesellerrating
 *     requestBody:
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             example:
 *               consumername:Aman
*                review:"Best"
*                rating:4
*                sellerid:662e6d264ab7ea3ffcd048c0
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkMjQ5YjEwNjlkYjgwYTYwYTZkM2MiLCJpYXQiOjE3MTI1MTU1MzksImV4cCI6MTcxMjYwMTkzOX0.TOIyc_2QeRH50ZoULHM53kLpCZKNPZmTY16EuQ2cso4
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */


/**
 * @swagger
 * /api/customer/service/:serviceid:
 *   get:
 *     tags:
 *       - default
 *     summary: seeservicedetails
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkMjQ5YjEwNjlkYjgwYTYwYTZkM2MiLCJpYXQiOjE3MTI1MTU1MzksImV4cCI6MTcxMjYwMTkzOX0.TOIyc_2QeRH50ZoULHM53kLpCZKNPZmTY16EuQ2cso4
 *     responses:
 *       '200':
 *         description: See service details sent successfully
 *         content:
 *           application/json: {}
 */

/**
 * @swagger
 * /api/customer/viewServices/filter/{filter_details}:
 *   get:
 *     tags:
 *       - default
 *     summary: filterbytag
 *     parameters:
 *       - name: Authorization
 *         in: header
 *       - name: filter_details
 *         in: path
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkMjQ5YjEwNjlkYjgwYTYwYTZkM2MiLCJpYXQiOjE3MTI1MTU1MzksImV4cCI6MTcxMjYwMTkzOX0.TOIyc_2QeRH50ZoULHM53kLpCZKNPZmTY16EuQ2cso4
 *     responses:
 *       '200':
 *         description: See service details filtered successfully
 *         content:
 *           application/json: {}
 */


/**
 * @swagger
 * /api/customer/transaction/filter/{endDate}/{startDate}:
 *   get:
 *     tags:
 *       - default
 *     summary: filterbytag
 *     parameters:
 *       - name: Authorization
 *         in: header
 *       - name: endDate
 *         in: path
 *       - name: startDate
 *         in: path
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkMjQ5YjEwNjlkYjgwYTYwYTZkM2MiLCJpYXQiOjE3MTI1MTU1MzksImV4cCI6MTcxMjYwMTkzOX0.TOIyc_2QeRH50ZoULHM53kLpCZKNPZmTY16EuQ2cso4
 *     responses:
 *       '200':
 *         description: See service details filtered successfully for customer
 *         content:
 *           application/json: {}
 */




/**
 * @swagger
 * /api/admin/transaction/filter/{endDate}/{startDate}:
 *   get:
 *     tags:
 *       - default
 *     summary: filterbytag
 *     parameters:
 *       - name: Authorization
 *         in: header
 *       - name: endDate
 *         in: path
 *       - name: startDate
 *         in: path
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkMjQ5YjEwNjlkYjgwYTYwYTZkM2MiLCJpYXQiOjE3MTI1MTU1MzksImV4cCI6MTcxMjYwMTkzOX0.TOIyc_2QeRH50ZoULHM53kLpCZKNPZmTY16EuQ2cso4
 *     responses:
 *       '200':
 *         description: See service details filtered successfully for admin
 *         content:
 *           application/json: {}
 */






/**
 * @swagger
 * /api/seller/transaction/filter/{endDate}/{startDate}:
 *   get:
 *     tags:
 *       - default
 *     summary: filterbytag
 *     parameters:
 *       - name: Authorization
 *         in: header
 *       - name: endDate
 *         in: path
 *       - name: startDate
 *         in: path
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkMjQ5YjEwNjlkYjgwYTYwYTZkM2MiLCJpYXQiOjE3MTI1MTU1MzksImV4cCI6MTcxMjYwMTkzOX0.TOIyc_2QeRH50ZoULHM53kLpCZKNPZmTY16EuQ2cso4
 *     responses:
 *       '200':
 *         description: See service details filtered successfully for seller
 *         content:
 *           application/json: {}
 */




/**
 * @swagger
 *   /api/consumer/sellerprofileview:
 *     get:
 *       tags:
 *         - default
 *       summary: consumersellerprofileview
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzNzc5NjMsImV4cCI6MTcxNDQ2NDM2M30.5qVGo7NFdc01ahB3z1_voj-56FYma4OaXDuDkIKJBgo
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 *   /api/consumer/viewServices:
 *     get:
 *       tags:
 *         - default
 *       summary: consumerviewServices
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzNzc5NjMsImV4cCI6MTcxNDQ2NDM2M30.5qVGo7NFdc01ahB3z1_voj-56FYma4OaXDuDkIKJBgo
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */


/**
 * @swagger
 * /api/consumer/readmessage:
 *   post:
 *     tags:
 *       - default
 *     summary: consumerreadmessage
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */

/**
 * @swagger
 * /api/consumer/sendmessage:
 *   post:
 *     tags:
 *       - default
 *     summary: consumersendmessage
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */


/**
 * @swagger
 * /api/consumer/transaction:
 *   get:
 *     tags:
 *       - default
 *     summary: consumerrtransactionpage
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */

/**
 * @swagger
 * /api/consumer/transactionsave:
 *   post:
 *     tags:
 *       - default
 *     summary: consumerrtransactionsaved here
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */






/**
 * @swagger
 * /api/consumer/payment:
 *   post:
 *     tags:
 *       - default
 *     summary: consumerpayment
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */




/**
 * @swagger
 * /api/consumer/viewbroadcast:
 *   get:
 *     tags:
 *       - default
 *     summary: consumerviewbroadcast
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */
/**
 * @swagger
 *   /api/consumer/makerequest:
 *     post:
 *       tags:
 *         - default
 *       summary: consumermakerequest
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 email: consumer2@locally.com
 *                 password: abCD12#$
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjE5NGNjNmI2ZDE3ZjM1NDBhMzMzZTkiLCJpYXQiOjE3MTMyMDk3MDcsImV4cCI6MTcxMzI5NjEwN30.zTjgUaWD0J824s7Ax1IRPP3ik88ek0aZjaeXmgTr-Ew
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/customer/pendingrequests:
 *     get:
 *       tags:
 *         - default
 *       summary: Consumerpendingrequest
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjE5NGNjNmI2ZDE3ZjM1NDBhMzMzZTkiLCJpYXQiOjE3MTMyMDk5NDYsImV4cCI6MTcxMzI5NjM0Nn0.VOYjBU4fg3R_6MKZl3y-wRnrhQhl-RJr4qRxAdAXb1c
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 *   /api/customer/completed:
 *     get:
 *       tags:
 *         - default
 *       summary: Consumercompletedrequest
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjE5NGNjNmI2ZDE3ZjM1NDBhMzMzZTkiLCJpYXQiOjE3MTMyMDk5NDYsImV4cCI6MTcxMzI5NjM0Nn0.VOYjBU4fg3R_6MKZl3y-wRnrhQhl-RJr4qRxAdAXb1c
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 *   /api/customer/acceptedrequests:
 *     get:
 *       tags:
 *         - default
 *       summary: Consumeracceptedrequest
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjE5NGNjNmI2ZDE3ZjM1NDBhMzMzZTkiLCJpYXQiOjE3MTMyMDk5NDYsImV4cCI6MTcxMzI5NjM0Nn0.VOYjBU4fg3R_6MKZl3y-wRnrhQhl-RJr4qRxAdAXb1c
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */



/**
 * @swagger
 *   /api/consumer/seller/optedservice:
 *     post:
 *       tags:
 *         - default
 *       summary: Consumeroptedserviceinfo
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 _id: 662f5424814b6ede81f00a2d
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzNzc5NjMsImV4cCI6MTcxNDQ2NDM2M30.5qVGo7NFdc01ahB3z1_voj-56FYma4OaXDuDkIKJBgo
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 *   /api/consumer/pendingrequestdelete:
 *     delete:
 *       tags:
 *         - default
 *       summary: deletependingrequestsconsumerside
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 _id:662fd95da1a554ba70d2d313
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzNzc5NjMsImV4cCI6MTcxNDQ2NDM2M30.5qVGo7NFdc01ahB3z1_voj-56FYma4OaXDuDkIKJBgo
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */



/**
 * @swagger
 *   /api/consumer/sellerreview:
 *     post:
 *       tags:
 *         - default
 *       summary: Consumerreviewseller
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 _id: 662e6d264ab7ea3ffcd048c0
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzNzc5NjMsImV4cCI6MTcxNDQ2NDM2M30.5qVGo7NFdc01ahB3z1_voj-56FYma4OaXDuDkIKJBgo
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/customer/history:
 *     get:
 *       tags:
 *         - default
 *       summary: Consumerhistory
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjE5NGNjNmI2ZDE3ZjM1NDBhMzMzZTkiLCJpYXQiOjE3MTMyMDk5NDYsImV4cCI6MTcxMzI5NjM0Nn0.VOYjBU4fg3R_6MKZl3y-wRnrhQhl-RJr4qRxAdAXb1c
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */


/** 
 * @swagger
 *   /api/seller/register:
 *     post:
 *       tags:
 *         - default
 *       summary: seller_register
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 name: seller57
 *                 email: seller57@locally.com
 *                 password: abCD12#$
 *                 phone: '1234567890'
 *                 address: gkp
 *                 pin: 273013
 *       parameters:
 *         - name: name
 *           in: header
 *           schema:
 *             type: string
 *           example: seller57
 *         - name: email
 *           in: header
 *           schema:
 *             type: string
 *           example: seller57@locally.com
 *         - name: password
 *           in: header
 *           schema:
 *             type: string
 *           example: abCD12#$
 *         - name: address
 *           in: header
 *           schema:
 *             type: string
 *           example: gkp
 *         - name: pin
 *           in: header
 *           schema:
 *             type: integer
 *           example: '273013'
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 *   /api/seller/login:
 *     post:
 *       tags:
 *         - default
 *       summary: sellerlogin
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 email: seller1@locally.com
 *                 password: abCD12#$
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 *   /api/seller/profile:
 *     get:
 *       tags:
 *         - default
 *       summary: SellerProfile
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlNmQyNjRhYjdlYTNmZmNkMDQ4YzAiLCJpYXQiOjE3MTQzMTk4MDYsImV4cCI6MTcxNDQwNjIwNn0.tiXanH36U6z-85NDV2KI8QXkxlA7Kkn9VrhnEkL8MYk
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */


/**
 * @swagger
 *   /api/seller/viewservice:
 *     get:
 *       tags:
 *         - default
 *       summary: SellerviewServices
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzNzc5NjMsImV4cCI6MTcxNDQ2NDM2M30.5qVGo7NFdc01ahB3z1_voj-56FYma4OaXDuDkIKJBgo
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */


/**
 * @swagger
 *   /api/seller/addservice:
 *     get:
 *       tags:
 *         - default
 *       summary: Selleraddservice
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzNzc5NjMsImV4cCI6MTcxNDQ2NDM2M30.5qVGo7NFdc01ahB3z1_voj-56FYma4OaXDuDkIKJBgo
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */


/**
 * @swagger
 * /api/seller/profile/update:
 *   put:
 *     tags:
 *       - default
 *     summary: sellerprofileedit
 *     requestBody:
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             example:
 *               address: fgdl
 *               pin: '323450'
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjBkNjEwNWY0ZDEyMjkzMTc0ZjJiZjkiLCJpYXQiOjE3MTI1MTk5NTIsImV4cCI6MTcxMjYwNjM1Mn0.0L09zdKYi25xRIkG96P6bcE3ERMUTkANSjlxSlg9_bQ
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */
/**
 * @swagger
 *   /api/seller/viewbroadcast:
 *     get:
 *       tags:
 *         - default
 *       summary: SellerViewBroadcast
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlNmQyNjRhYjdlYTNmZmNkMDQ4YzAiLCJpYXQiOjE3MTQzMTk4MDYsImV4cCI6MTcxNDQwNjIwNn0.tiXanH36U6z-85NDV2KI8QXkxlA7Kkn9VrhnEkL8MYk
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/seller/review/route:
 *     get:
 *       tags:
 *         - default
 *       summary: SellerReviewRoute
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlNmQyNjRhYjdlYTNmZmNkMDQ4YzAiLCJpYXQiOjE3MTQzMTk4MDYsImV4cCI6MTcxNDQwNjIwNn0.tiXanH36U6z-85NDV2KI8QXkxlA7Kkn9VrhnEkL8MYk
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 *   /api/seller/history:
 *     get:
 *       tags:
 *         - default
 *       summary: sellerrhistory
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjE5NGNjNmI2ZDE3ZjM1NDBhMzMzZTkiLCJpYXQiOjE3MTMyMDk5NDYsImV4cCI6MTcxMzI5NjM0Nn0.VOYjBU4fg3R_6MKZl3y-wRnrhQhl-RJr4qRxAdAXb1c
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 *   /api/seller/viewrequests:
 *     get:
 *       tags:
 *         - default
 *       summary: SelllerView CustomerRequest
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjFhOTdhODc1N2I3M2ZjYjQyMjViNzYiLCJpYXQiOjE3MTMyODgyMjcsImV4cCI6MTcxMzM3NDYyN30.dJx_hlvCNz_4PSzM1B4Nl-WT6rjs2K8ZzQNydj5DnDs
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/seller/request/accepted/661c0a9f765fe244624f4e49:
 *     get:
 *       tags:
 *         - default
 *       summary: SellerAcceptedrequest
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjFhOTdhODc1N2I3M2ZjYjQyMjViNzYiLCJpYXQiOjE3MTMyOTA5OTAsImV4cCI6MTcxMzM3NzM5MH0.83yAPWpDXnJ637xM79QcQqfO9CsA6gmpOJO8tqxJW0k
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/seller/request/cancel/661d848b3096e7764c9323fe:
 *     delete:
 *       tags:
 *         - default
 *       summary: Sellercanceledrequest
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjFhOTdhODc1N2I3M2ZjYjQyMjViNzYiLCJpYXQiOjE3MTMyOTIyODQsImV4cCI6MTcxMzM3ODY4NH0.x8Duis0EYfEw3eaQLHBsgmvUht6HNlg00uIT_km0ST4
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/admin/register:
 *     post:
 *       tags:
 *         - default
 *       summary: adminregister
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 name: admin1
 *                 email: admin1@locally.com
 *                 password: abCD12#$
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/admin/login:
 *     post:
 *       tags:
 *         - default
 *       summary: adminlogin
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               example:
 *                 email: admin1@locally.com
 *                 password: abCD12#$
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/admin/profile/update:
 *     put:
 *       tags:
 *         - default
 *       summary: Adminprofileupdate
 *       requestBody:
 *         content:
 *           application/json:
 *             schema:
 *               type: object


 *               example:
 *                 name: admin11
 *                 email: admin11@locally.com
 *                 password: abCD12#$
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlNmQyNjRhYjdlYTNmZmNkMDQ4YzAiLCJpYXQiOjE3MTQzMTk4MDYsImV4cCI6MTcxNDQwNjIwNn0.tiXanH36U6z-85NDV2KI8QXkxlA7Kkn9VrhnEkL8MYk
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/admin/view/consumer:
 *     get:
 *       tags:
 *         - default
 *       summary: AdminViewConsumer
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlNmQyNjRhYjdlYTNmZmNkMDQ4YzAiLCJpYXQiOjE3MTQzMTk4MDYsImV4cCI6MTcxNDQwNjIwNn0.tiXanH36U6z-85NDV2KI8QXkxlA7Kkn9VrhnEkL8MYk
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */
/**
 * @swagger
 *   /api/admin/view/seller:
 *     get:
 *       tags:
 *         - default
 *       summary: AdminViewSeller
 *       parameters:
 *         - name: Authorization
 *           in: header
 *           schema:
 *             type: string
 *           example: >-
 *             Bearer
 *             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlNmQyNjRhYjdlYTNmZmNkMDQ4YzAiLCJpYXQiOjE3MTQzMTk4MDYsImV4cCI6MTcxNDQwNjIwNn0.tiXanH36U6z-85NDV2KI8QXkxlA7Kkn9VrhnEkL8MYk
 *       responses:
 *         '200':
 *           description: Successful response
 *           content:
 *             application/json: {}
 */

/**
 * @swagger
 * /api/admin/consumerlist:
 *   get:
 *     tags:
 *       - default
 *     summary: consumerlistshown
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */

/**
 * @swagger
 * /api/admin/sellerlist:
 *   get:
 *     tags:
 *       - default
 *     summary: consumerrtransactionpage
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */


/**
 * @swagger
 * /api/admin/blockseller:
 *   post:
 *     tags:
 *       - default
 *     summary: sellerblockedbyadmin
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */



/**
 * @swagger
 * /api/admin/blockconsumer:
 *   post:
 *     tags:
 *       - default
 *     summary: consumerblockedbyadmin
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */




/**
 * @swagger
 * /api/admin/blockedconsumerlist:
 *   get:
 *     tags:
 *       - default
 *     summary: all the consumers blockedbyadmin
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */



/**
 * @swagger
 * /api/admin/blockedsellerlist:
 *   get:
 *     tags:
 *       - default
 *     summary: all the sellersblockedbyadmin
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */


/**
 * @swagger
 * /api/admin/unblockconsumer:
 *   post:
 *     tags:
 *       - default
 *     summary: consumer unblockedbyadmin
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */




/**
 * @swagger
 * /api/admin/unblockseller:
 *   post:
 *     tags:
 *       - default
 *     summary: sellerblockedbyadmin
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */


/**
 * @swagger
 * /api/admin/makebroadcast:
 *   post:
 *     tags:
 *       - default
 *     summary: make a broadcast
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */





/**
 * @swagger
 * /api/admin/broadcast/view:
 *   get:
 *     tags:
 *       - default
 *     summary: view all broadcasts
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */


/**
 * @swagger
 * /api/admin/totalservice:
 *   get:
 *     tags:
 *       - default
 *     summary: see all existing services
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */


/**
 * @swagger
 * /api/admin/history:
 *   get:
 *     tags:
 *       - default
 *     summary: see all service and request history of past
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */



/**
 * @swagger
 * /api/admin/transaction:
 *   get:
 *     tags:
 *       - default
 *     summary: view  all transactions
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */

/**
 * @swagger
 * /api/admin/allpendingrequest:
 *   get:
 *     tags:
 *       - default
 *     summary: view  all pending requests
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */



/**
 * @swagger
 * /api/seller/chattile:
 *   get:
 *     tags:
 *       - default
 *     summary: seller chattile
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */



/**
 * @swagger
 * /api/seller/viewchat:
 *   post:
 *     tags:
 *       - default
 *     summary: seller side view chat with customer
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */



/**
 * @swagger
 * /api/seller/sendchat:
 *   post:
 *     tags:
 *       - default
 *     summary: seller side sending chat by customer
 *     parameters:
 *       - name: Authorization
 *         in: header
 *         schema:
 *           type: string
 *         example: >-
 *           Bearer
 *           eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjJlMzRlZDExNTkwZjc2ZjEyZGMwYzUiLCJpYXQiOjE3MTQzMjAxOTMsImV4cCI6MTcxNDQwNjU5M30.LQvcmnYydeoxYHJKcE8Sn_TREfvR3fzkXow1Q-iwl6Q
 *     responses:
 *       '200':
 *         description: Successful response
 *         content:
 *           application/json: {}
 */



```